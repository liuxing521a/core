<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.itas.core.bytecode.TestByteCodes" tests="2" skipped="0" failures="1" errors="0" timestamp="2015-03-18T09:48:59" hostname="liu" time="0.276">
  <properties/>
  <testcase name="testByteCodeClass" classname="org.itas.core.bytecode.TestByteCodes" time="0.138"/>
  <testcase name="testByteCodeClass" classname="org.itas.core.bytecode.TestByteCodes" time="0.031">
    <failure message="javassist.bytecode.DuplicateMemberException: duplicate method: doFill in org.itas.core.bytecode.TestModel" type="javassist.bytecode.DuplicateMemberException">javassist.bytecode.DuplicateMemberException: duplicate method: doFill in org.itas.core.bytecode.TestModel
	at javassist.bytecode.ClassFile.testExistingMethod(ClassFile.java:680)
	at javassist.bytecode.ClassFile.addMethod(ClassFile.java:656)
	at javassist.CtClassType.addMethod(CtClassType.java:1344)
	at org.itas.core.bytecode.ByteCodes.testToClass(ByteCodes.java:109)
	at org.itas.core.bytecode.TestByteCodes.testByteCodeClass(TestByteCodes.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:69)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:48)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:292)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
</failure>
  </testcase>
  <system-out><![CDATA[2015-49-18 17:49:00[Test worker][TRACE]: protected void doAlter(java.sql.Statement stmt, java.util.Set columns) throws java.sql.SQLException {
		java.util.Map alterMap = new java.util.HashMap();
		alterMap.put("test2", "ALTER TABLE `model` ADD `test2` TEXT;");
		alterMap.put("address", "ALTER TABLE `model` ADD `address` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("identy", "ALTER TABLE `model` ADD `identy` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("test", "ALTER TABLE `model` ADD `test` TEXT;");
		alterMap.put("createTime", "ALTER TABLE `model` ADD `createTime` TIMESTAMP NOT NULL;");
		alterMap.put("name", "ALTER TABLE `model` ADD `name` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("updateTime", "ALTER TABLE `model` ADD `updateTime` TIMESTAMP NOT NULL;");
		alterMap.put("Id", "ALTER TABLE `model` ADD `Id` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("test1", "ALTER TABLE `model` ADD `test1` TEXT;");

		java.util.Map.Entry entry;
		java.util.Iterator it = alterMap.entrySet().iterator();
		while (it.hasNext()) {
			entry = it.next();
			if (!columns.contains((String)entry.getKey()))
			stmt.addBatch((String)entry.getValue());
		}
	}
2015-49-18 17:49:00[Test worker][TRACE]: protected void doCreate(java.sql.Statement stmt) {stmt.addBatch("CREATE TABLE IF NOT EXISTS `model`(`Id` VARCHAR(36) NOT NULL DEFAULT '',`name` VARCHAR(36) NOT NULL DEFAULT '',`identy` VARCHAR(36) NOT NULL DEFAULT '',`address` VARCHAR(36) NOT NULL DEFAULT '',`test` TEXT,`test1` TEXT,`test2` TEXT,`updateTime` TIMESTAMP NOT NULL,`createTime` TIMESTAMP NOT NULL,UNIQUE KEY `identy` (`identy`),KEY `address` (`address`),PRIMARY KEY `Id` (`Id`)) ENGINE=MyISAM DEFAULT CHARSET=utf8;");}
2015-49-18 17:49:00[Test worker][TRACE]: protected void doAlter(java.sql.Statement stmt, java.util.Set columns) throws java.sql.SQLException {
		java.util.Map alterMap = new java.util.HashMap();
		alterMap.put("test2", "ALTER TABLE `model` ADD `test2` TEXT;");
		alterMap.put("address", "ALTER TABLE `model` ADD `address` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("identy", "ALTER TABLE `model` ADD `identy` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("test", "ALTER TABLE `model` ADD `test` TEXT;");
		alterMap.put("createTime", "ALTER TABLE `model` ADD `createTime` TIMESTAMP NOT NULL;");
		alterMap.put("name", "ALTER TABLE `model` ADD `name` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("updateTime", "ALTER TABLE `model` ADD `updateTime` TIMESTAMP NOT NULL;");
		alterMap.put("Id", "ALTER TABLE `model` ADD `Id` VARCHAR(36) NOT NULL DEFAULT '';");
		alterMap.put("test1", "ALTER TABLE `model` ADD `test1` TEXT;");

		java.util.Map.Entry entry;
		java.util.Iterator it = alterMap.entrySet().iterator();
		while (it.hasNext()) {
			entry = it.next();
			if (!columns.contains((String)entry.getKey()))
			stmt.addBatch((String)entry.getValue());
		}
	}
2015-49-18 17:49:00[Test worker][TRACE]: protected void doCreate(java.sql.Statement stmt) {stmt.addBatch("CREATE TABLE IF NOT EXISTS `model`(`Id` VARCHAR(36) NOT NULL DEFAULT '',`name` VARCHAR(36) NOT NULL DEFAULT '',`identy` VARCHAR(36) NOT NULL DEFAULT '',`address` VARCHAR(36) NOT NULL DEFAULT '',`test` TEXT,`test1` TEXT,`test2` TEXT,`updateTime` TIMESTAMP NOT NULL,`createTime` TIMESTAMP NOT NULL,UNIQUE KEY `identy` (`identy`),KEY `address` (`address`),PRIMARY KEY `Id` (`Id`)) ENGINE=MyISAM DEFAULT CHARSET=utf8;");}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
